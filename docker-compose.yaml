version: "1"

services:
  postgres:
    image: postgres:15.5-alpine
    ports:
      - "5432:5432"
    volumes:
      - ~/DockerVolumes/debeziumdemo/postgres:/var/lib/postgresql/data
      - ./create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    environment:
      - POSTGRES_PASSWORD=q
      - POSTGRESQL_TIMEZONE=Europe/Istanbul
      - POSTGRES_INITDB_ARGS=--locale-provider=icu --icu-locale=tr-TR
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"
    restart: always
  kafka:
    image: bitnami/kafka:3.6.1
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    restart: always
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "8089:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094
    restart: always
  connect:
    image: debezium/connect:2.6
    container_name: connect
    ports:
      - "8088:8088"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_status
      BOOTSTRAP_SERVERS: kafka:9094
      PLUGIN_PATH: /kafka/connect/plugins
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./.scripts/debezium_onstartup:/usr/local/debezium_onstartup
    entrypoint: [ "/bin/sh", "-c", "chmod +x /usr/local/debezium_onstartup/debezium_onstartup.sh && /usr/local/debezium_onstartup/debezium_onstartup.sh & /docker-entrypoint.sh start" ]
